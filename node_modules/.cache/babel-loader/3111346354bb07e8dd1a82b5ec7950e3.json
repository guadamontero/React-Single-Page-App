{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\guada\\\\Desktop\\\\Udemy-React\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  //--------------------- OTRA FORMA DE HACERLO CON UN SOLO USE STATE ---------------------\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // });\n  // const titleChangeHandler = (event) => {\n  //     Si solo quiero cambiar el titulo, tengo que agregar el amount y el date tambien\n  //     Una forma de hacerlo es poniendo \"...userInput\"\n  //     setUserInput({\n  //         ...userInput,\n  //         enteredTitle: event.target.value\n  //     });\n  // }\n  // const amountChangeHandler = (event) => {\n  //     setUserInput({\n  //         ...userInput,\n  //         enteredAmount: event.target.value\n  //     });\n  // }\n  // const dateChangeHandler = (event) => {\n  //     setUserInput({\n  //         ...userInput,\n  //         enteredDate: event.target.value\n  //     });\n  // }\n  //--------------------- SI DEPENDE DEL STATE ANTERIOR: ---------------------\n  //This is the safer way to ensure that you always operate on the lastest state snapshot.\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // });\n  // const titleChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return { ...prevState, enteredTitle: event.target.value }\n  //     });\n  // }\n  // const amountChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return { ...prevState, enteredAmount: event.target.value }\n  //     });\n  // }\n  // const dateChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return { ...prevState, enteredDate: event.target.value }\n  //     });\n  // }\n  //--------------------- STATES SEPARADOS: ---------------------\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    //Para sacar el reload que hace por defecto una vez que el formulario es enviado.\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: enteredTitle,\n        onChange: titleChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: \"2019-01-01\",\n        max: \"2022-12-31\",\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"sources":["D:/Usuario/guada/Desktop/Udemy-React/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {    \r\n    //--------------------- OTRA FORMA DE HACERLO CON UN SOLO USE STATE ---------------------\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n    \r\n    // const titleChangeHandler = (event) => {\r\n    //     Si solo quiero cambiar el titulo, tengo que agregar el amount y el date tambien\r\n    //     Una forma de hacerlo es poniendo \"...userInput\"\r\n    //     setUserInput({\r\n    //         ...userInput,\r\n    //         enteredTitle: event.target.value\r\n    //     });\r\n    // }\r\n\r\n    // const amountChangeHandler = (event) => {\r\n    //     setUserInput({\r\n    //         ...userInput,\r\n    //         enteredAmount: event.target.value\r\n    //     });\r\n    // }\r\n\r\n    // const dateChangeHandler = (event) => {\r\n    //     setUserInput({\r\n    //         ...userInput,\r\n    //         enteredDate: event.target.value\r\n    //     });\r\n    // }\r\n\r\n    //--------------------- SI DEPENDE DEL STATE ANTERIOR: ---------------------\r\n    //This is the safer way to ensure that you always operate on the lastest state snapshot.\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n    \r\n    // const titleChangeHandler = (event) => {\r\n    //     setUserInput((prevState) => {\r\n    //         return { ...prevState, enteredTitle: event.target.value }\r\n    //     });\r\n    // }\r\n\r\n    // const amountChangeHandler = (event) => {\r\n    //     setUserInput((prevState) => {\r\n    //         return { ...prevState, enteredAmount: event.target.value }\r\n    //     });\r\n    // }\r\n\r\n    // const dateChangeHandler = (event) => {\r\n    //     setUserInput((prevState) => {\r\n    //         return { ...prevState, enteredDate: event.target.value }\r\n    //     });\r\n    // }\r\n\r\n    //--------------------- STATES SEPARADOS: ---------------------\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        //Para sacar el reload que hace por defecto una vez que el formulario es enviado.\r\n        event.preventDefault(); \r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n    }\r\n\r\n    return (\r\n       <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\"></div>\r\n        <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n       </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMQ,kBAAkB,GAAIC,KAAD,IAAW;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACH,CAFD;;EAIA,MAAMC,mBAAmB,GAAIH,KAAD,IAAW;IACnCJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;EACH,CAFD;;EAIA,MAAME,iBAAiB,GAAIJ,KAAD,IAAW;IACjCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACH,CAFD;;EAIA,MAAMG,aAAa,GAAIL,KAAD,IAAW;IAC7B;IACAA,KAAK,CAACM,cAAN;IAEA,MAAMC,WAAW,GAAG;MAChBC,KAAK,EAAEf,YADS;MAEhBgB,MAAM,EAAEd,aAFQ;MAGhBe,IAAI,EAAE,IAAIC,IAAJ,CAASd,WAAT;IAHU,CAApB;EAKH,CATD;;EAWA,oBACG;IAAM,QAAQ,EAAEQ,aAAhB;IAAA,wBACC;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEZ,YAA1B;QAAwC,QAAQ,EAAEM;MAAlD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAMC;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,QAAZ;QAAqB,GAAG,EAAC,MAAzB;QAAgC,IAAI,EAAC,MAArC;QAA4C,QAAQ,EAAEI;MAAtD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAND,eAUC;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,GAAG,EAAC,YAAvB;QAAoC,GAAG,EAAC,YAAxC;QAAqD,QAAQ,EAAEC;MAA/D;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAVD,eAcC;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAdD;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAoBH,CAzGD;;GAAMZ,W;;KAAAA,W;AA2GN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}